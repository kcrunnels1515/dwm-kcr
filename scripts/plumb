#!/bin/bash
function _emacsfun
{
# Replace with `emacs` to not run as server/client
emacsclient -c -n $@
}

# An emacs 'alias' with the ability to read from stdin example: echo "hello world" | ef -
function ef
{
# If the argument is - then write stdin to a tempfile and open the
# tempfile.
if [[ $1 == - ]]; then
tempfile=$(mktemp emacs-stdin-$USER.XXXXXXX --tmpdir)
cat - > $tempfile
_emacsfun -e "(progn (find-file \"$tempfile\")
                             (set-visited-file-name nil)
                             (rename-buffer \"*stdin*\" t))
                 " 2>&1 > /dev/null
else
_emacsfun "$@"
fi
}

BROWSER="brave"
prim="$(xclip -o)"; [ -z "$prim" ] && exit

PID=$(xprop -id "$(xprop -root | awk '/_NET_ACTIVE_WINDOW\(WINDOW\)/{print $NF}')" | grep -m 1 PID | cut -d ' ' -f 3)
PID=$(echo "$(pstree -lpA "$PID" | tail -n 1)" | awk -F'---' '{print $NF}' | sed -re 's/[^0-9]//g')
cd "$(readlink /proc/"$PID"/cwd)"
[ -f "$prim" ] && rifle "$prim" && exit
[ -d "$prim" ] && "$TERMINAL" "$prim" && exit

websearch() { "/usr/local/share/scripts/dmenu-surfraw.sh" "$@" ;}
maps() { "$BROWSER" "https://openstreetmap.org/search?query=$@" ;}
edit() { "echo" "$@" "ef" "-" ;}

echo "$prim" | grep "^.*\.[A-Za-z]\+.*" >/dev/null && gotourl() { "$BROWSER" "$@" ;}
echo "$prim" | grep "^.*@.*\.[A-Za-z]\+$" >/dev/null && email() { xdg-email "$@" ;}
command -v qrencode >/dev/null && qrcode() { qrencode "$@" -s 10 -o /tmp/qr.png && rifle /tmp/qr.png ;}
man -k "^$prim$" >/dev/null && manual() { man -Tpdf "$prim" | zathura - ;}

func="$(declare -F | awk '{print $3}' | dmenu -p "Plumb $prim to?" -i -l 15)"

[ -z "$func" ] || "$func" "$prim"
